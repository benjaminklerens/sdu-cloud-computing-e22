apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: benjaminhck/sdu-cloud-frontend:v4.1
          imagePullPolicy: "Always"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  name: svc-frontend
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - protocol: TCP
      name: svc-frontend
      port: 8080
      targetPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: svc-backend
  annotations:
    cloud.google.com/backend-config: '{"default": "backend-hc"}'
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - protocol: TCP
      name: svc-backend
      port: 3000
      targetPort: 3000

--- 

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: benjaminhck/sdu-cloud-backend:v1
          imagePullPolicy: "Always"
          ports:
            - containerPort: 3000
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
---

apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: backend-hc
spec:
  sessionAffinity:
    affinityType: "CLIENT_IP"
  healthCheck:
    checkIntervalSec: 15
    port: 3000
    type: HTTP
    requestPath: /health


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "ingress-web"
    networking.gke.io/v1beta1.FrontendConfig: ssl-redirect
    networking.gke.io/managed-certificates: managedcert
spec:
  defaultBackend:
    service:
      name: svc-frontend
      port:
        number: 8080
  rules:
  - host: frontend.benjaminklerens.com
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: svc-frontend
            port:
              number: 8080
  - host: backend.benjaminklerens.com
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: svc-backend
            port:
              number: 3000
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: ssl-redirect
spec:
  redirectToHttps:
    enabled: false
    responseCodeName: MOVED_PERMANENTLY_DEFAULT
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managedcert 
spec:
  domains:
    - frontend.benjaminklerens.com
    - backend.benjaminklerens.com